buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath 'com.badlogicgames.gdx:gdx-jnigen-gradle:2.5.2'
    }
}

plugins {
    id 'java'
    id 'java-library'
}

repositories {
    mavenCentral()
}

group = rootProject.group
version = rootProject.version

configurations {
    desktopNatives {
        canBeConsumed = true
        canBeResolved = false
    }

    instrumentedJars {
        canBeConsumed = true
        canBeResolved = false
        extendsFrom api, implementation, runtimeOnly
    }
}

dependencies {
    api project(':luajava')
}

apply plugin: 'com.badlogicgames.gdx.gdx-jnigen'

jnigen {
    sharedLibName = 'lua53'

    all {
        cFlags += ' -DLUA_COMPAT_5_2'
        cppFlags += ' -DLUA_COMPAT_5_2'
        headerDirs = ['../../jni/luajava', 'mod', 'lua53']
        cppExcludes = ['lua53/**/*']
        cExcludes = ['lua53/**/*']
        libraries = ' -lm '
    }

    add(Windows, x64)
    add(Linux, x64)
    add(Linux, x64, ARM)
    each({ it.os == Linux }) {
        String linuxFlags = ' -D_FORTIFY_SOURCE=0 -DLUA_USE_DLOPEN '
        cFlags += linuxFlags
        cppFlags += linuxFlags
    }
    // Removed Android, iOS, MacOS, robovm, and other extra targets for minimal desktop build
}

artifacts {
    instrumentedJars(jar)
    desktopNatives(jnigenJarNativesDesktop)
}

tasks.named('jar') {
    manifest {
        attributes('Automatic-Module-Name': 'party.iroiro.luajava.lua53')
    }
}

tasks.jnigen.dependsOn(tasks.build)

configure([
        project(':luajava'),
        project(':lua51'),
        project(':lua52'),
        project(':lua53'),
        project(':lua54'),
        project(':luajit'),
        project(':luaj'),
        project(':jsr223')
]) {
    apply plugin: 'maven-publish'
    //apply plugin: 'signing'

    apply from: project(':').file('javadoc.gradle')
    apply from: project(':').file('pom.gradle')

    java {
        withSourcesJar()
        withJavadocJar()
    }

    afterEvaluate { project ->
        publishing {
            publications {
                mavenJava(MavenPublication) {
                    from components.java
                    versionMapping {
                        usage('java-api') {
                            fromResolutionOf('runtimeClasspath')
                        }
                        usage('java-runtime') {
                            fromResolutionResult()
                        }
                    }
                    setPom(pom, '')
                }
                if (project.tasks.findByName('jnigen')) {
                    mavenPlatform(MavenPublication) {
                        artifactId = artifactId + '-platform'
                        if (project.tasks.findByName('jnigenJarNativesDesktop')) {
                            artifact jnigenJarNativesDesktop {}
                        }
                        setPom(pom, ' Native Libraries')
                    }
                }
            }
            repositories {
                maven {
                    name = 'GitHubPackages'
                    url = "https://maven.pkg.github.com/${System.getenv('GITHUB_REPOSITORY')}"
                    credentials {
                        username = System.getenv("GITHUB_ACTOR")
                        password = System.getenv("GITHUB_TOKEN")
                    }
                }
            }
        }

//        //signing {
//            useInMemoryPgpKeys(
//                    System.getenv("GPG_KEY_ID"),
//                    System.getenv("GPG_SECKEY"),
//                    System.getenv("GPG_PASSPHRASE"),
//            )
//            //sign publishing.publications.mavenJava
//
//            if (project.tasks.findByName('jnigen')) {
//                //sign publishing.publications.mavenPlatform
//            }
//        }
    }
}
